<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sBadkidIdle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-200</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0.25;
hp = 120;
//instance_create(x, y, oBadkidHP);
//instance_create(0, 0, oBadkidNoise);
//instance_create(0, 0, oRotated3d);
instance_create(0, 0, oCameraBadkid);
loseHP = 0;
uThreshold = shader_get_uniform(shLoseHP, "threshold");

changeMode = false;

shootTimer = 0;

if(global.badkid) {
sprite_index = sBadkidChange;
image_speed = 0;
                    oCameraBadkid.viewW = 800;
                    oCameraBadkid.viewH = 608;
    if(!instance_exists(oBadkidHP)) {
                        instance_create(x, y, oBadkidHP);
                    }
                    
                    if(!instance_exists(oBadkidNoise)) {
                        instance_create(0, 0, oBadkidNoise);
                    }
                    oCameraBadkid.animation = false;
                    changeMode = true;
                    hp = 100;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>loseHP = lerp(loseHP, 0, 0.1);

if(hp &lt;= 0) {
    audio_stop_all();
    audio_play_sound(sndDeath, 100, false);
    instance_create(room_width/2, 400, oWarpFadeIn);
    with(oRainCreator) {
        instance_destroy();
    }
    with(oStorms) {
        instance_destroy();
    }
    with(oLasers) {
        instance_destroy();
    }
    with(oLaserEmit) {
        instance_destroy();
    }
    with(oBadkidHP) {
        instance_destroy();
    }
    with(oBadkidNoise) {
        instance_destroy();
    }
    with(oCameraBadkid) {
        instance_destroy();
    }
    instance_destroy();
}

if(hp &lt;= 100 &amp;&amp; hp &gt; 0) {
    if(!changeMode) {
        changeMode = true;
    }
    
    if(instance_exists(oBadkidHP)) {
        if(!audio_is_playing(musBadkid)) {
            audio_play_sound(musBadkid, 1000, true);
        }
        shootTimer++;
        y = 450 + sin(current_time/200)*50 - abs(sin(current_time/1000)*100);
        x = room_width/2 + cos(current_time/2000)*230;
        if(instance_exists(objPlayer)) {
            if(x &gt; objPlayer.x) {
                image_xscale = 1;
            } else {
                image_xscale = -1;
            }
        }
        if(hp &gt;= 50) {
            //First State
            image_index = 2;
            if(shootTimer &gt;= 25) {
                image_index = 2;
            }else {
                image_index = 1;
            }
            if(shootTimer &gt;= 28 &amp;&amp; instance_exists(objPlayer)) {
                instance_create(x, y, oShadowBall);
                shootTimer = 0;
            }
        } else if(hp &gt;= 0) {
            if(shootTimer == 50 &amp;&amp; instance_exists(objPlayer)) {
                instance_create(x, y, oLaserEmit);
            }
            if(shootTimer == 55 &amp;&amp; instance_exists(objPlayer)) {
                instance_create(x, y, oLaserEmit);
            }
            if(shootTimer &gt;= 60 &amp;&amp; instance_exists(objPlayer)) {
                instance_create(x, y, oLaserEmit);
                shootTimer = 0;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objBullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!oCameraBadkid.animation) {
    if(loseHP &lt; 0.1){
        hp -= 5;
        loseHP = 1;
        audio_play_sound(sndHurt, 100, false);
        with(other) {
            instance_destroy();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

shader_set(shLoseHP);
shader_set_uniform_f(uThreshold, loseHP);
draw_sprite_ext(sprite_index, -1, x, y, image_xscale, image_yscale, image_angle, c_white, loseHP);
shader_reset();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
