<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sTitle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>toX = x + random_range(-10, 10);
toY = y + random_range(-10, 10);
alarm[0] = 50;

_utexture = shader_get_sampler_index(shCover, "u_texture");
texture = sprite_get_texture(sTexture, -1);
_utime = shader_get_uniform(shCover, "u_time");
_utime2 = shader_get_uniform(shScreenTitleNoise, "u_time");
time = 0;
timer = 0;
//Resofa added freeze
freeze=0;
select = 0;

button[0] = "Load Game";
button[1] = "Start Game";
button[2] = "Options";
button[3] = "Exit Game";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>toX = x + random_range(-5, 5);
toY = y + random_range(-5, 5);
alarm[0] = 50;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>time++;
timer += 0.05;
//x = lerp(x, toX, .1);
//y = lerp(y, toY, .1);

x = xstart + cos(time/40) * 3.0;
y = ystart + sin(time/40) * 3.0;

if(freeze=0)
{
//Resofa added freeze
if(select = 3 &amp;&amp; scrButtonCheckPressed(global.menuDownButton)){
    select = -1;
}
if(select = 0 &amp;&amp; scrButtonCheckPressed(global.menuUpButton)){
    select = 4;
}

if(scrButtonCheckPressed(global.menuUpButton) &amp;&amp; select &gt; 0){
    select -= 1;
    audio_play_sound(global.menuSound,0,false);
}

if(scrButtonCheckPressed(global.menuDownButton) &amp;&amp; select &lt; 3){
    select += 1;
    audio_play_sound(global.menuSound,0,false);
}

if (scrButtonCheckPressed(global.menuAcceptButton)){
    switch(select){
        case 0:{
        if (file_exists("Data\save"+string(global.savenum))){
            scrLoadGame(true);
        }
        }break;
        case 1:{
            //start new game
                    global.gameStarted = true; //sets game in progress (enables saving, restarting, etc.)
                    global.autosave = true;
                    
                    global.difficulty = 0;
                    
                    if (file_exists("Data\save"+string(global.savenum)))
                        file_delete("Data\save"+string(global.savenum));
freeze=1;
                    FadeInto(global.startRoom);
            
                        
        }break;
        case 2:{
            global.menuSelectPrev[0] = select;
            room_goto(rOptions);
        }break;
        case 3:{
            game_end();
        }break;
    }
}
//
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shader_set(shScreenTitleNoise);
shader_set_uniform_f(_utime2, timer);
draw_surface(application_surface, 0, 0);
shader_reset();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>texture_set_repeat(true);
shader_set(shCover);
shader_set_uniform_f(_utime, time);
texture_set_stage(_utexture, texture);
draw_self();
shader_reset();

draw_set_color(c_white);
draw_set_halign(fa_center);
draw_set_valign(fa_center);
draw_set_font(fontButton);
if (file_exists("Data\save"+string(global.savenum))){
    if(select == 1){
        draw_set_font(fontWarningSmaller);
        draw_text(room_width/2, room_height/2 - 50, "SAVE EXISTING, ARE YOU STILL WANNA START A NEW GAME?")
    } 
}
draw_set_font(fontButton);
for(var i = 0; i &lt;= 3; i++){
    if(i == select){
        shader_set(shCover);
    }
    draw_text(room_width/2 + sin(timer)*4, room_height/2 + i*80, string(button[i]));
    draw_set_color(c_white);
    shader_reset();
}
shader_reset();
draw_set_halign(fa_left);
draw_set_valign(fa_top);
draw_set_color(c_white);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
